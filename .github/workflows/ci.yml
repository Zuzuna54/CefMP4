name: Python Application CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # If you use Poetry and export requirements.txt:
          # pip install poetry
          # poetry export -f requirements.txt --output requirements.txt --without-hashes
          # poetry install --no-root --with dev # Or pip install -r requirements.txt if exported

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check .

      - name: Check formatting with Ruff
        run: |
          # Ruff should already be installed from previous step if combined
          # pip install ruff # If run as a separate job or if not installed
          ruff format --check .

      - name: Type check with MyPy
        run: |
          pip install mypy
          mypy src tests --ignore-missing-imports # Keep ignore-missing-imports as per pyproject.toml

    # --- Unit and Integration Test Job (Placeholder for now) ---
    # test:
    #   needs: build # Or run in parallel if deps are handled independently
    #   runs-on: ubuntu-latest
    #   steps:
    #   - uses: actions/checkout@v4
    #   - name: Set up Python
    #     uses: actions/setup-python@v5
    #     with:
    #       python-version: "3.12"
    #       cache: 'pip'
    #   - name: Install dependencies
    #     run: |
    #       pip install -r requirements.txt
    #       # Install test-specific dependencies if any (e.g. pytest, pytest-cov)
    #       pip install pytest pytest-cov pytest-asyncio aiohttp
    #   - name: Run Pytest
    #     run: pytest
